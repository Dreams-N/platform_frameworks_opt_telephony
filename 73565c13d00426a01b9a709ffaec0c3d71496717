Revision: 73565c13d00426a01b9a709ffaec0c3d71496717
Patch-set: 1
File: src/java/com/android/internal/telephony/uicc/UiccCard.java

265
Wed May 07 03:25:08 2014 +0000
Author: Hidenori Yamaji <1004248@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 6a346007_7bb1ece5
Bytes: 247
SIM is related to choose proper resource. See alternative resource which contains mcc/mnc identifier. Therefore I think we need to send onConfigurationChange at Hot SIM swap.
I searched this related by the change-ID but I couldn't. Do you have it?

265
Wed May 07 11:20:56 2014 +0000
Author: Duho Ro <1021635@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 6a346007_7bb1ece5
UUID: 6a346007_11b7e1c5
Bytes: 350
I think that it is not easy to decide whether we should add it or not.
I don't want to be changed my configuration when I insert my family's SIM or pre-paid local SIM. ;) Of course, there will be something to be changed. But, we need to check whether those have already been performed or not when SIM is loading.

Could you explain what I am missing?

265
Thu May 08 07:56:34 2014 +0000
Author: Duho Ro <1021635@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 6a346007_11b7e1c5
UUID: 8afd1475_86f61ab2
Bytes: 2209
In my hotswap supported device, the some configuration is changing according the SIM card. 


  05-07 21:40:18.440 D/MccTable( 1013): updateMccMncConfiguration: mcc=310, mnc=120
  05-07 21:40:18.440 D/MccTable( 1013): getLocaleFromMcc to en_us mcc=310
  05-07 21:40:18.440 D/MccTable( 1013): getLocaleForLanguageCountry: skipping already persisted
  05-07 21:40:18.440 D/MccTable( 1013): getLocaleForLanguageCountry: X locale=null
  05-07 21:40:18.440 D/MccTable( 1013): updateMccMncConfiguration updateConfig config={1.0 310mcc120mnc ?locale ?layoutDir ?swdp ?wdp ?hdp ?density ?lsize ?long ?orien ?uimode ?night ?touch ?keyb/?/? ?nav/?}
  
  05-07 21:40:43.140 D/RILJ    ( 1013): [UNSL]< UNSOL_RESPONSE_SIM_STATUS_CHANGED
  05-07 21:40:43.140 D/RILJ    ( 1013): [3758]> GET_SIM_STATUS
  05-07 21:40:43.140 D/RILJ    ( 1013): [3758]< GET_SIM_STATUS IccCardState {CARDSTATE_ABSENT,PINSTATE_UNKNOWN,num_apps=0,gsm_id=-1,cdma_id=-1,ims_id=-1}
  
  05-07 21:40:57.949 D/RILJ    ( 1013): [UNSL]< UNSOL_RESPONSE_SIM_STATUS_CHANGED
  05-07 21:40:57.979 D/RILJ    ( 1013): [3803]> GET_SIM_STATUS
  05-07 21:40:57.989 D/RILJ    ( 1013): [3803]< GET_SIM_STATUS IccCardState {CARDSTATE_PRESENT,PINSTATE_UNKNOWN,num_apps=2,gsm_id=0{APPTYPE_USIM,APPSTATE_DETECTED,pin1=PINSTATE_UNKNOWN,pin2=PINSTATE_UNKNOWN},cdma_id=-1,ims_id=-1}
  05-07 21:41:01.949 D/SIMRecords( 1013): [SIMRecords] fetchSimRecords 0
  05-07 21:41:01.949 D/RILJ    ( 1013): [3842]> getIMSI: GET_IMSI aid: a0000000871002ffffffff8903020000
  05-07 21:41:02.009 D/SIMRecords( 1013): [SIMRecords] IMSI: xxxxxxx
  
  05-07 21:41:02.939 D/MccTable( 1013): updateMccMncConfiguration: mcc=310, mnc=410
  05-07 21:41:02.949 D/MccTable( 1013): getLocaleFromMcc to en_us mcc=310
  05-07 21:41:02.949 D/MccTable( 1013): getLocaleForLanguageCountry: skipping already persisted
  05-07 21:41:02.949 D/MccTable( 1013): getLocaleForLanguageCountry: X locale=null
  05-07 21:41:02.949 D/MccTable( 1013): updateMccMncConfiguration updateConfig config={1.0 310mcc410mnc ?locale ?layoutDir ?swdp ?wdp ?hdp ?density ?lsize ?long ?orien ?uimode ?night ?touch ?keyb/?/? ?nav/?}
  

In my opinion, if we need to add something at this time, it should be explained more detail.

265
Mon May 12 04:46:11 2014 +0000
Author: Hidenori Yamaji <1004248@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 8afd1475_86f61ab2
UUID: aa4d7811_3eb70574
Bytes: 260
We need to confirm not only the case to insert but also the case to eject.

When SIM is ejected, onConfigurationChange is needed to invoke. And Mcc/Mnc=0 is expected according to http://developer.android.com/reference/android/content/res/Configuration.html#mcc

265
Wed May 14 12:51:55 2014 +0000
Author: Duho Ro <1021635@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: aa4d7811_3eb70574
UUID: ea9db0d4_1c15e157
Bytes: 785
You mean that mcc/mnc should be reset when the card is removed? If it makes some problem, it  seems to be a problem regardless  supporting hot swap. Is there any reason that it is only happend when hot-swap supporting?

Also, I think that the point of the SIM hot swap is the processing the change of the SIM, not a removing. I don't think that they remove the card to reset the configuration or to protect their private information. They will remove the card to insert another card or to use it on other device. There are some settings which should be kept regardless the card removed. For example, the volume limitation in EU and the camera shutter sound in Korea. So, we should change it at the card insertion time if some configuration should be changed according to inserted card.

265
Thu May 15 02:05:53 2014 +0000
Author: Hidenori Yamaji <1004248@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: ea9db0d4_1c15e157
UUID: ca71cc8d_dd9c1f60
Bytes: 942
As you know, Android has a mechanism to choose proper resource for application. And the mechanism uses various device condition. And one of device condition is mcc/mnc.

Therefore if the mnc/mcc is not reset when customer ejects sim, application is working in the previous condition.

And mcc/mnc is decided to each operator.
Some of application uses the mnc/mcc identifier to work for the condition.

Therefore we need to keep system behavior in case of hot swap supported device.

What do you think?


Regarding example of camera shutter sound, basically it is better not to depend on mcc/mnc. Although AOSP vanilla code to use mnc/mcc to switch shutter sound, we should use hardcode if the requirement is strict.

Because after inserting another SIM, the device may not play shutter sound.

And it is same on WiFi only device; such as WiFi Tablet.
So it's different topic of this.

Again, we need to keep behavior for application, I think.

265
Thu May 15 02:40:33 2014 +0000
Author: Duho Ro <1021635@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: ca71cc8d_dd9c1f60
UUID: 0a78446e_6a697fc3
Bytes: 186
I'm little confused.
We need to keep behavior for application, so, we don't need to reset mcc/mnc when the card removed. So, I don't understand why we need to call onConfigurationChaned.

265
Thu May 15 02:52:39 2014 +0000
Author: Hidenori Yamaji <1004248@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 0a78446e_6a697fc3
UUID: 6a3700c4_a9f0fdb8
Bytes: 1233
The onConfigurationChanged is general mechanism to notice condition change to application.

And as you explain in this thread, when customer inserts SIM, onConfiguratiunChanged will be called. But when customer ejects SIM, it is not called.

That's problem.

Handling onConfigurationChanged by application is used by application to avoid killing application.

As you may know, without handler of onConfigurationChanged, Android will kill the application and restart the activity with the resource choosing mechanism by the device condition.

And with handler of onConfigurationChanged, application has responsibility to load proper resource, instead of restarting the activity to execute with proper resource.

Getting back to the topic, if onConfigurationChanged with mnc/mcc=0 is not invoked when SIM is ejected, application cannot load proper resource for no SIM condition. That's why I suggest to add some modification for your identified issue.

Please note that system will restart when SIM is ejected in case of no-hot-swap-device. And then there is no issue not to invoke onConfigurationChanged in current vanilla code. But this commit will introduce hot swap functionality, then we need to solve the gap.

What do you think?

265
Thu May 15 10:36:21 2014 +0000
Author: Duho Ro <1021635@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 6a3700c4_a9f0fdb8
UUID: 0a78446e_50e0f4a9
Bytes: 427
Thanks for your explain. I have a question.
As you mentioned, when customer ejects SIM, onConfigurationChanged is not called.
It means that the configuration_changed event is not occurred.
So, how can the Activity know that user ejects SIM and restart the activity?
If the customer ejects SIM and  he/she does not insert the card anymore until power off, is some activity killed and can not be restarted on non-hot-swap device?

265
Fri May 16 01:30:56 2014 +0000
Author: Hidenori Yamaji <1004248@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 0a78446e_50e0f4a9
UUID: 3ff1cc50_941e94f6
Bytes: 348
As I explained, hotswap is not supported by vanilla yet.
And when SIM is ejected, system will restart.
Then it's lack of implementation to support HotSwap.
Hence onConfigurationChanged with mcc/mnc is called by inserting SIM, onConfigurationChanged with mcc/mnc=0 is needed to invoke on hotswap supported device to keep consistency for application.

265
Fri May 16 02:16:24 2014 +0000
Author: Duho Ro <1021635@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3ff1cc50_941e94f6
UUID: ca71cc8d_c6e7e4f6
Bytes: 389
I assume that system will not be restarted.
Hot-swap supported device will just restart the card or the radio subsystem, not whole system.
Hot-swap means that something can be replacing without shutting down the system.
I think that SIM hot-swap should be working like SIM Refresh caused by IMSI switching.
So, I added above condition for dismissing the dialog without calling pm.reboot().

265
Fri May 16 02:52:05 2014 +0000
Author: Hidenori Yamaji <1004248@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: ca71cc8d_c6e7e4f6
UUID: 6a4e2058_88b15922
Bytes: 163
Yes, after supporting hotswap, keeping working without restart is expected behavior.

Therefore onCofigurationChanged with mcc/mnc=0 is needed to keep consistency.

265
Fri May 16 04:11:36 2014 +0000
Author: Duho Ro <1021635@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 6a4e2058_88b15922
UUID: ca71cc8d_a9f47bf7
Bytes: 446
For calling onConfigurationChanged, configuration_chaned should be issued. If we change it, system will kill the activity for changing configuration. Why we should change to issue configuration_change for killing the activity and then we also should add another code to avoid the killing the activity?
Already there is not issued configuration_chaned and the activity does not know the card ejection. Also, the activity is keeping their behavior.

265
Fri May 16 04:23:34 2014 +0000
Author: Hidenori Yamaji <1004248@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: ca71cc8d_a9f47bf7
UUID: 6a4e2058_08f3a955
Bytes: 411
You may misunderstand...

From application perspective, killing it without handling onConfigurationChanged is natural. And expectation of case to handle onConfigurationChanged is invoking onConfigurationChanged.

That's system's behavior to application.
What you should do is NOT to invoke onConfigurationChanged directly. You need to add implementation to notice configuration change to system after mnc/mcc=0.

265
Fri May 16 07:30:48 2014 +0000
Author: Duho Ro <1021635@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 6a4e2058_08f3a955
UUID: 6a4e2058_ced52956
Bytes: 1412
In my understand...

you requested the application should know the MCC/MNC is changed caused of the card rejection.

So, I asked why it is needed to change because the application should be keeping their behaviour.

You answered that the activity will be killed for changing proper resource(mcc 0 mnc 0) without handling onConfigurationChanged.

I explained that the system will not restart and that the mcc/mnc change is not notified.

It means that the resource is not changed. So, I think there is no problem regardless supporting hot-swap.

However, you want that the mcc/mnc change is notified for the application to handle it and to keep their behavior.

 
Is there what I misunderstand or missing?
 

It is better that the change of the card status is notified to applications for handling their own onConfigurationChanged.

It is good perspective.

But, I don't agree with you that we should change it.

Because the behavior of the card rejection is not changed regardless supporting hot-swap.

The applications are keeping their behavior without the change for the card rejection on non-hot-swap devices.

On hot-swap supported device, it will be working properly without change.

On the other hand, if we add the notification of the card rejection, the application will be able to need other action for supporting it.


 @Wink,

Could we get a third opnion from other vendors what are they think about?

